/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package parkingsystem.UserInterface;

import parkingsystem.BusinessLogic.User;
import parkingsystem.Enums.UserTypes;
import parkingsystem.Utility.DisplayMessage;
import parkingsystem.Utility.ValidateFields;

import javax.swing.*;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.text.JTextComponent;
import java.awt.*;
import java.util.*;

/**
 *
 * @author talha
 */
public class UsersDisplayForm extends javax.swing.JFrame {
    private User user = null;
    private ArrayList<String> usernames = null;
    private HashMap<String, Integer> userTypesByName = null;
    private HashMap<Integer, String> userTypesByValue = null;
    /**
     * Creates new form UsersDisplayForm
     */
    public UsersDisplayForm() {

        initComponents();
       
        user = new User();

        userTypesByName = new HashMap<>();
        userTypesByValue = new HashMap<>();

        for(UserTypes userType : UserTypes.values()){
            userTypesByName.put(userType.getName(), userType.getValue());
            cbUserType.addItem(userType.getName());
        }

        for(UserTypes userType : UserTypes.values()){
            userTypesByValue.put(userType.getValue(), userType.getName());
        }

        updateFrame();



    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnMain = new javax.swing.JPanel();
        spUserList = new javax.swing.JScrollPane();
        tbUserList = new javax.swing.JTable();
        pnRegisterUser = new javax.swing.JPanel();
        pfConfirmPassword = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbUserType = new javax.swing.JComboBox<>();
        tfUsername = new javax.swing.JTextField();
        tfFullName = new javax.swing.JTextField();
        tfEmail = new javax.swing.JTextField();
        pfPassword = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        btnClearForm = new javax.swing.JButton();
        pnDeleteUser = new javax.swing.JPanel();
        cbUsernames = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Users");

        tbUserList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        spUserList.setViewportView(tbUserList);

        jLabel2.setText("Username");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel3.setText("Full Name");

        jLabel4.setText("Email");

        jLabel5.setText("Password");

        jLabel6.setText("Confirm Password");

        jLabel1.setText("User Type");

        btnClearForm.setText("Clear Form");
        btnClearForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFormActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnRegisterUserLayout = new javax.swing.GroupLayout(pnRegisterUser);
        pnRegisterUser.setLayout(pnRegisterUserLayout);
        pnRegisterUserLayout.setHorizontalGroup(
            pnRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnRegisterUserLayout.createSequentialGroup()
                .addGroup(pnRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnRegisterUserLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(btnClearForm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave))
                    .addGroup(pnRegisterUserLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(pnRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnRegisterUserLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(62, 62, 62)
                                .addComponent(pfConfirmPassword))
                            .addGroup(pnRegisterUserLayout.createSequentialGroup()
                                .addGroup(pnRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1))
                                .addGap(105, 105, 105)
                                .addGroup(pnRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfUsername)
                                    .addComponent(cbUserType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfFullName)
                                    .addComponent(tfEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(92, 92, 92))
        );
        pnRegisterUserLayout.setVerticalGroup(
            pnRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnRegisterUserLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(pnRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbUserType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(pnRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(pfConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnClearForm))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jLabel7.setText("Select User");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnDeleteUserLayout = new javax.swing.GroupLayout(pnDeleteUser);
        pnDeleteUser.setLayout(pnDeleteUserLayout);
        pnDeleteUserLayout.setHorizontalGroup(
            pnDeleteUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDeleteUserLayout.createSequentialGroup()
                .addGroup(pnDeleteUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnDeleteUserLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel7)
                        .addGap(70, 70, 70)
                        .addComponent(cbUsernames, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnDeleteUserLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnDeleteUserLayout.setVerticalGroup(
            pnDeleteUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDeleteUserLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(pnDeleteUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbUsernames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(btnDelete)
                .addGap(53, 53, 53))
        );

        javax.swing.GroupLayout pnMainLayout = new javax.swing.GroupLayout(pnMain);
        pnMain.setLayout(pnMainLayout);
        pnMainLayout.setHorizontalGroup(
            pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnMainLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnRegisterUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnDeleteUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        pnMainLayout.setVerticalGroup(
            pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMainLayout.createSequentialGroup()
                .addGroup(pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnMainLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnRegisterUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnDeleteUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String userTypeName = cbUserType.getSelectedItem().toString();
        int userTypeValue = userTypesByName.get(userTypeName);

        String username = tfUsername.getText();
        String fullName = tfFullName.getText();
        String email = tfEmail.getText();
        char[] password = pfPassword.getPassword();
        char[] confirmPassword = pfConfirmPassword.getPassword();

        // Validate all the fields and show error message if any
        String message = "";
        if(username.isEmpty() || username.contains(" ")){
            message += "- Username is required and cannot contain white spaces\n";
        }
        if(usernames.contains(username)){
            message += "- The Username '" + username + "' is already registered. Use a different one\n";
        }
        if(fullName.isEmpty()){
            message += "- Full Name is required\n";
        }
        if(!ValidateFields.validateEmail(email)){
            message += "- Provide a valid email address\n";
        }
        if(password.length < 5){
            message += "- Password is required and must be of at least 5 characters\n";
        }
        if(!Arrays.equals(password, confirmPassword)){
            message += "- Both password fields must match";
        }

        if(!message.isEmpty()){
            message = "Please resolve the following errors:\n" + message;
            DisplayMessage.displayError(message);
        }else{
            User user = new User();
            if(user.registerUser(fullName, username, password, email, userTypeValue)) {
                String successMessage = "User '" + username + "' registered successfully!";
                DisplayMessage.displayInfo(successMessage);
                clearFields(pnRegisterUser);
                updateFrame();
            }else{
                DisplayMessage.displayError("Error occurred while saving in database");
            }
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String selectedUser = cbUsernames.getSelectedItem().toString();
        String message = "Are you sure you want to delete the user '" + selectedUser + "'?";
        if(DisplayMessage.displayConfirmDialog(message) == 0){
            if(user.deleteUser(selectedUser)){
                DisplayMessage.displayInfo("User '" + selectedUser + "' has been deleted successfully!");
                updateFrame();

                // Remove the username of the selected username because its deleted now
                cbUsernames.removeItem(selectedUser);
            }else{
                DisplayMessage.displayError("Unable to delete the user through database!");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFormActionPerformed
        clearFields(pnRegisterUser);
    }//GEN-LAST:event_btnClearFormActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsersDisplayForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsersDisplayForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsersDisplayForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsersDisplayForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UsersDisplayForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearForm;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbUserType;
    private javax.swing.JComboBox<String> cbUsernames;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPasswordField pfConfirmPassword;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JPanel pnDeleteUser;
    private javax.swing.JPanel pnMain;
    private javax.swing.JPanel pnRegisterUser;
    private javax.swing.JScrollPane spUserList;
    private javax.swing.JTable tbUserList;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfFullName;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables

    private void updateFrame(){

        ArrayList<User> users = user.getAllUsers();
        usernames = user.getAllUsernames();
        int totalUsers = users.size();
        Object[][] data = new Object[totalUsers][];
        Object[] columns = {"Sr.No", "Username", "Full Name", "E-mail", "User Type"};

        // Load details of all users in the table
        int count = 0;
        for(User user2: users){
            int userTypeValue = user2.getUserType();
            String userTypeName = userTypesByValue.get(userTypeValue);
            String username = user2.getUsername();
            String fullName = user2.getFullName();
            String email = user2.getEmail();
            Object[] row = {count+1, username, fullName, email, userTypeName};
            data[count] = row;
            count++;
        }
        tbUserList.setModel(new javax.swing.table.DefaultTableModel(
                data, columns
        ));

        // Add/update entries of usernames in the combo box to delete users
        // Remove the username of currently logged in user from the list so, that it cannot be deleted
        String loggedInUsername = User.getLoggedInUser().getUsername();
        usernames.remove(loggedInUsername);

        // This function is called several times, so delete existing items of combo box before
        // adding new entries. Otherwise, entries will be duplicated
        cbUsernames.removeAllItems();

        for(String username:usernames){
            cbUsernames.addItem(username);
        }
    }

    private void clearFields(JComponent component){
        Component[] components = component.getComponents();
        for (Component singleComponent : components) {
            if (singleComponent instanceof JTextField || singleComponent instanceof JTextArea) {
                JTextComponent specificObject = (JTextComponent) singleComponent;
                specificObject.setText("");
            }
        }
    }
}
