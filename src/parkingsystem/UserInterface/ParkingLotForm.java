/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package parkingsystem.UserInterface;

import parkingsystem.BusinessLogic.ParkingLot;
import parkingsystem.BusinessLogic.ParkingLotAllocation;
import parkingsystem.BusinessLogic.User;
import parkingsystem.BusinessLogic.Worker;
import parkingsystem.Enums.VehicleTypes;
import parkingsystem.Utility.*;

import javax.swing.*;
import javax.swing.text.NumberFormatter;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;

/**
 *
 * @author talha
 */
public class ParkingLotForm extends javax.swing.JFrame {
    private int selectedParkingLotId = -1;
    private HashMap<String, Integer> allWorkersUsername = null;
    private HashMap<String, ArrayList<String>> allPLAllocation = null;

    private ParkingLotUtil parkingLotUtil = null;

    /**
     * Creates new form ParkingLotForm
     */
    public ParkingLotForm() {

        initComponents();

        updateFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbParkingLot = new javax.swing.JTable();
        pnDeleteParkingLot = new javax.swing.JPanel();
        cbParkingLotNamesDelete = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        pnAddParkingLot = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        tfLocation = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        ftfBikeCapacity = new javax.swing.JFormattedTextField();
        ftfCarCapacity = new javax.swing.JFormattedTextField();
        ftfRickshawCapacity = new javax.swing.JFormattedTextField();
        ftfHeavyVehicleCapacity = new javax.swing.JFormattedTextField();
        btnClear = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cbParkingLotNamesUpdate = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        ftfBikeFee = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        ftfRickshawFee = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        ftfCarFee = new javax.swing.JFormattedTextField();
        ftfHeavyVehicleFee = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        pnAddPLAllocation = new javax.swing.JPanel();
        cbParkingLotAllot = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        cbWorkers = new javax.swing.JComboBox<>();
        btnSaveAllocation = new javax.swing.JButton();
        pnDisplayPLAllocation = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbPLAllocation = new javax.swing.JTable();
        pnDeletePLAllocation = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        cbWorkerDeletePLAllocation = new javax.swing.JComboBox<>();
        cbParkingLotDeletePLAllocation = new javax.swing.JComboBox<>();
        btnDeletePLAllocation = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tbParkingLot.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbParkingLot);

        jTabbedPane1.addTab("View Parking Lots", jScrollPane1);

        jLabel7.setText("Parking Lot");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnDeleteParkingLotLayout = new javax.swing.GroupLayout(pnDeleteParkingLot);
        pnDeleteParkingLot.setLayout(pnDeleteParkingLotLayout);
        pnDeleteParkingLotLayout.setHorizontalGroup(
            pnDeleteParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDeleteParkingLotLayout.createSequentialGroup()
                .addGroup(pnDeleteParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnDeleteParkingLotLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel7)
                        .addGap(67, 67, 67)
                        .addComponent(cbParkingLotNamesDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnDeleteParkingLotLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(btnDelete)))
                .addContainerGap(622, Short.MAX_VALUE))
        );
        pnDeleteParkingLotLayout.setVerticalGroup(
            pnDeleteParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDeleteParkingLotLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(pnDeleteParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbParkingLotNamesDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(37, 37, 37)
                .addComponent(btnDelete)
                .addContainerGap(712, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Delete Parking Lot", pnDeleteParkingLot);

        jLabel1.setText("Name");

        jLabel2.setText("Location");

        jLabel3.setText("Car Capacity");

        jLabel4.setText("Bike Capacity");

        jLabel5.setText("Rickshaw Capacity");

        jLabel6.setText("Heavy Vehicle Capacity");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        ftfBikeCapacity.setFormatterFactory(NumberFormatting.intFormatterFactory());

        ftfCarCapacity.setFormatterFactory(NumberFormatting.intFormatterFactory());

        ftfRickshawCapacity.setFormatterFactory(NumberFormatting.intFormatterFactory());

        ftfHeavyVehicleCapacity.setFormatterFactory(NumberFormatting.intFormatterFactory());

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel8.setText("Parking Lot");

        cbParkingLotNamesUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbParkingLotNamesUpdateActionPerformed(evt);
            }
        });

        jLabel9.setText("Add parking fee (per hour) for each vehicle type");

        jLabel10.setText("Add Vehicle Capacity for Each Vehicle Type");

        jLabel11.setText("Bike Fee");

        ftfBikeFee.setFormatterFactory(NumberFormatting.floatFormatterFactory());

        jLabel12.setText("Rickshaw Fee");

        ftfRickshawFee.setFormatterFactory(NumberFormatting.floatFormatterFactory());

        jLabel13.setText("Car Fee");

        ftfCarFee.setFormatterFactory(NumberFormatting.floatFormatterFactory());

        ftfHeavyVehicleFee.setFormatterFactory(NumberFormatting.floatFormatterFactory());

        jLabel14.setText("Heavy Vehicle Fee");

        javax.swing.GroupLayout pnAddParkingLotLayout = new javax.swing.GroupLayout(pnAddParkingLot);
        pnAddParkingLot.setLayout(pnAddParkingLotLayout);
        pnAddParkingLotLayout.setHorizontalGroup(
            pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAddParkingLotLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnAddParkingLotLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbParkingLotNamesUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ftfRickshawCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnAddParkingLotLayout.createSequentialGroup()
                            .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnAddParkingLotLayout.createSequentialGroup()
                                    .addGap(121, 121, 121)
                                    .addComponent(jLabel9))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnAddParkingLotLayout.createSequentialGroup()
                                    .addGap(0, 9, Short.MAX_VALUE)
                                    .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnAddParkingLotLayout.createSequentialGroup()
                                            .addComponent(jLabel10)
                                            .addGap(29, 29, 29))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnAddParkingLotLayout.createSequentialGroup()
                                                .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel1)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(btnClear)
                                                    .addComponent(jLabel11))
                                                .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(pnAddParkingLotLayout.createSequentialGroup()
                                                        .addGap(57, 57, 57)
                                                        .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(ftfBikeCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(ftfCarCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(64, 64, 64)
                                                        .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel2)
                                                            .addComponent(jLabel5)
                                                            .addComponent(jLabel6)))
                                                    .addGroup(pnAddParkingLotLayout.createSequentialGroup()
                                                        .addGap(54, 54, 54)
                                                        .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(ftfBikeFee, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(ftfCarFee, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(70, 70, 70)
                                                        .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel14)
                                                            .addComponent(jLabel12)))))
                                            .addGroup(pnAddParkingLotLayout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addGap(1, 1, 1))))))
                            .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnAddParkingLotLayout.createSequentialGroup()
                                    .addGap(17, 17, 17)
                                    .addComponent(ftfHeavyVehicleCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(tfLocation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(ftfRickshawFee, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ftfHeavyVehicleFee, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 257, Short.MAX_VALUE))
        );
        pnAddParkingLotLayout.setVerticalGroup(
            pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAddParkingLotLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbParkingLotNamesUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(tfLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jLabel10)
                .addGap(32, 32, 32)
                .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfBikeCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(ftfRickshawCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ftfCarCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfHeavyVehicleCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(52, 52, 52)
                .addComponent(jLabel9)
                .addGap(31, 31, 31)
                .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfBikeFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(ftfRickshawFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(ftfCarFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfHeavyVehicleFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(39, 39, 39)
                .addGroup(pnAddParkingLotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear)
                    .addComponent(btnSave))
                .addContainerGap(361, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Parking Lot", pnAddParkingLot);

        cbParkingLotAllot.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLabel16.setText("Parking Lot");

        jLabel15.setText("Select Worker");

        btnSaveAllocation.setText("Save");
        btnSaveAllocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAllocationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnAddPLAllocationLayout = new javax.swing.GroupLayout(pnAddPLAllocation);
        pnAddPLAllocation.setLayout(pnAddPLAllocationLayout);
        pnAddPLAllocationLayout.setHorizontalGroup(
            pnAddPLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAddPLAllocationLayout.createSequentialGroup()
                .addGroup(pnAddPLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnAddPLAllocationLayout.createSequentialGroup()
                        .addGroup(pnAddPLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addGap(75, 75, 75)
                        .addGroup(pnAddPLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbWorkers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbParkingLotAllot, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnAddPLAllocationLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(btnSaveAllocation)))
                .addGap(0, 31, Short.MAX_VALUE))
        );
        pnAddPLAllocationLayout.setVerticalGroup(
            pnAddPLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAddPLAllocationLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(pnAddPLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(cbWorkers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(pnAddPLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(cbParkingLotAllot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(btnSaveAllocation)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        tbPLAllocation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbPLAllocation);

        javax.swing.GroupLayout pnDisplayPLAllocationLayout = new javax.swing.GroupLayout(pnDisplayPLAllocation);
        pnDisplayPLAllocation.setLayout(pnDisplayPLAllocationLayout);
        pnDisplayPLAllocationLayout.setHorizontalGroup(
            pnDisplayPLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDisplayPLAllocationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnDisplayPLAllocationLayout.setVerticalGroup(
            pnDisplayPLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDisplayPLAllocationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jLabel17.setText("Worker");

        jLabel18.setText("Parking Lot");

        cbWorkerDeletePLAllocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbWorkerDeletePLAllocationActionPerformed(evt);
            }
        });

        btnDeletePLAllocation.setText("Delete");
        btnDeletePLAllocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePLAllocationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnDeletePLAllocationLayout = new javax.swing.GroupLayout(pnDeletePLAllocation);
        pnDeletePLAllocation.setLayout(pnDeletePLAllocationLayout);
        pnDeletePLAllocationLayout.setHorizontalGroup(
            pnDeletePLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDeletePLAllocationLayout.createSequentialGroup()
                .addGroup(pnDeletePLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnDeletePLAllocationLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(pnDeletePLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(pnDeletePLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbParkingLotDeletePLAllocation, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbWorkerDeletePLAllocation, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnDeletePLAllocationLayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(btnDeletePLAllocation)))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        pnDeletePLAllocationLayout.setVerticalGroup(
            pnDeletePLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDeletePLAllocationLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnDeletePLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(cbWorkerDeletePLAllocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(pnDeletePLAllocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(cbParkingLotDeletePLAllocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeletePLAllocation)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnAddPLAllocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnDeletePLAllocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pnDisplayPLAllocation, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnDisplayPLAllocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pnAddPLAllocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnDeletePLAllocation, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(413, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Allocate Worker for Parking Lot", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(109, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 895, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // Getting all the text fields in String first because exception occurs in case of
        // directly parsing to int if no input is provided in the form
        String name = tfName.getText();
        String location = tfLocation.getText();
        String bikeCapacity = ftfBikeCapacity.getText();
        String rickshawCapacity = ftfRickshawCapacity.getText();
        String carCapacity = ftfCarCapacity.getText();
        String heavyVehicleCapacity = ftfHeavyVehicleCapacity.getText();

        String bikeFee = ftfBikeFee.getText();
        String rickshawFee = ftfRickshawFee.getText();
        String carFee = ftfCarFee.getText();
        String heavyVehicleFee = ftfHeavyVehicleFee.getText();

        // Perform validation checks for all fields
        String message = "";
        if(location.isBlank()){
            message += "- Location is required\n";
        }
        if(name.isBlank()){
            message += "- Name is required\n";
        }

        if(bikeCapacity.isBlank()){
            message += "- Provide valid value for Bike Capacity (In Numbers)\n";
        }

        if(carCapacity.isBlank()){
            message += "- Provide valid value for Car Capacity (In Numbers)\n";
        }
        if(rickshawCapacity.isBlank()){
            message += "- Provide valid value for Rickshaw Capacity (In Numbers)\n";
        }
        if(heavyVehicleCapacity.isBlank()){
            message += "- Provide valid value for Heavy Vehicle Capacity (In Numbers)\n";
        }
        if(bikeFee.isBlank()){
            message += "- Provide valid value for Bike Fee (In Numbers)\n";
        }

        if(carFee.isBlank()){
            message += "- Provide valid value for Car Fee (In Numbers)\n";
        }
        if(rickshawFee.isBlank()){
            message += "- Provide valid value for Rickshaw Fee (In Numbers)\n";
        }
        if(heavyVehicleFee.isBlank()){
            message += "- Provide valid value for Heavy Vehicle Fee (In Numbers)\n";
        }
        if(!message.isBlank()){
            message = "Please resolve the following errors:\n" + message;
            DisplayMessage.displayError(message);
        }else {
            ParkingLot parkingLot = new ParkingLot();
            int bikeCapacityInt = Integer.parseInt(bikeCapacity);
            int carCapacityInt = Integer.parseInt(carCapacity);
            int rickshawCapacityInt = Integer.parseInt(rickshawCapacity);
            int heavyVehicleCapacityInt = Integer.parseInt(heavyVehicleCapacity);
            float bikeFeeFloat = Float.parseFloat(bikeFee);
            float carFeeFloat = Float.parseFloat(carFee);
            float rickshawFeeFloat = Float.parseFloat(rickshawFee);
            float heavyVehicleFeeFloat = Float.parseFloat(heavyVehicleFee);

            parkingLot.setName(name);
            parkingLot.setLocation(location);
            parkingLot.setVehicleCapacity(VehicleTypes.BIKE.getValue(), bikeCapacityInt);
            parkingLot.setVehicleCapacity(VehicleTypes.CAR.getValue(), carCapacityInt);
            parkingLot.setVehicleCapacity(VehicleTypes.RICKSHAW.getValue(), rickshawCapacityInt);
            parkingLot.setVehicleCapacity(VehicleTypes.HEAVY_VEHICLE.getValue(), heavyVehicleCapacityInt);

            parkingLot.setParkingFee(VehicleTypes.BIKE.getValue(), bikeFeeFloat);
            parkingLot.setParkingFee(VehicleTypes.CAR.getValue(), carFeeFloat);
            parkingLot.setParkingFee(VehicleTypes.RICKSHAW.getValue(), rickshawFeeFloat);
            parkingLot.setParkingFee(VehicleTypes.HEAVY_VEHICLE.getValue(), heavyVehicleFeeFloat);

            // If an id is selected, then the existing parking lot will be updated
            if(selectedParkingLotId > 0){
                parkingLot.setId(selectedParkingLotId);
            }

            if (parkingLot.saveParkingLot()) {
                FormUtility.clearFields(pnAddParkingLot);
                DisplayMessage.displayInfo("Parking Lot added successfully!");
                updateFrame();
            } else {
                DisplayMessage.displayError("Failed to add Parking Lot in database!");
            }
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        cbParkingLotNamesUpdate.setSelectedIndex(0);
        FormUtility.clearFields(pnAddParkingLot);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String parkingLotName = cbParkingLotNamesDelete.getSelectedItem().toString();
        int parkingLotId = parkingLotUtil.getPLIdFromName(parkingLotName);
        if(new ParkingLot().deleteParkingLot(parkingLotId)){
            DisplayMessage.displayInfo("Parking Lot deleted successfully!");
            updateFrame();
        }else{
            DisplayMessage.displayError("Error occurred while deleting the Parking Lot");
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void cbParkingLotNamesUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbParkingLotNamesUpdateActionPerformed
        selectedParkingLotId = -1;
        if(cbParkingLotNamesUpdate.getSelectedItem()!= null) {
            String parkingLotName = cbParkingLotNamesUpdate.getSelectedItem().toString();
            if (!parkingLotName.contains("Select")) {
                selectedParkingLotId = parkingLotUtil.getPLIdFromName(parkingLotName);
                ParkingLot parkingLot = parkingLotUtil.getParkingLotFromId(selectedParkingLotId);
                tfName.setText(parkingLot.getName());
                tfLocation.setText(parkingLot.getLocation());
                ftfBikeCapacity.setText(Integer.toString(parkingLot.getSingleVehicleCapacity(VehicleTypes.BIKE.getValue())));
                ftfCarCapacity.setText(Integer.toString(parkingLot.getSingleVehicleCapacity(VehicleTypes.CAR.getValue())));
                ftfRickshawCapacity.setText(Integer.toString(parkingLot.getSingleVehicleCapacity(VehicleTypes.RICKSHAW.getValue())));
                ftfHeavyVehicleCapacity.setText(Integer.toString(parkingLot.getSingleVehicleCapacity(VehicleTypes.HEAVY_VEHICLE.getValue())));

                ftfBikeFee.setText(Float.toString(parkingLot.getSingleParkingFee(VehicleTypes.BIKE.getValue())));
                ftfCarFee.setText(Float.toString(parkingLot.getSingleParkingFee(VehicleTypes.CAR.getValue())));
                ftfRickshawFee.setText(Float.toString(parkingLot.getSingleParkingFee(VehicleTypes.RICKSHAW.getValue())));
                ftfHeavyVehicleFee.setText(Float.toString(parkingLot.getSingleParkingFee(VehicleTypes.HEAVY_VEHICLE.getValue())));

                
            }
        }
    }//GEN-LAST:event_cbParkingLotNamesUpdateActionPerformed

    private void btnSaveAllocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAllocationActionPerformed
        ParkingLotAllocation parkingLotAllocation = new ParkingLotAllocation();
        String parkingLotName = cbParkingLotAllot.getSelectedItem().toString();
        int parkingLotId = parkingLotUtil.getPLIdFromName(parkingLotName);
        String username = cbWorkers.getSelectedItem().toString();
        int userId = allWorkersUsername.get(username);

        parkingLotAllocation.setParkingLotId(parkingLotId);
        parkingLotAllocation.setUserId(userId);
        if(parkingLotAllocation.saveParkingLotAllocation()){
            DisplayMessage.displayInfo("Saved successfully!");
            updateFrame();
        }else{
            DisplayMessage.displayError("Error occurred while saving!");
        }

    }//GEN-LAST:event_btnSaveAllocationActionPerformed

    private void btnDeletePLAllocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePLAllocationActionPerformed
        String selectedWorker = cbWorkerDeletePLAllocation.getSelectedItem().toString();
        String selectedParkingLot = cbParkingLotDeletePLAllocation.getSelectedItem().toString();
        int selectedWorkerId = allWorkersUsername.get(selectedWorker);
        int selectedParkingLotId = parkingLotUtil.getPLIdFromName(selectedParkingLot);
        ParkingLotAllocation plAllocation = new ParkingLotAllocation();
        plAllocation.setParkingLotId(selectedParkingLotId);
        plAllocation.setUserId(selectedWorkerId);
        if(plAllocation.deleteParkingLotAllocation()){
            DisplayMessage.displayInfo("Removed Successfully!");
            updateFrame();
        }else{
            DisplayMessage.displayError("Operation Failed!");
        }

    }//GEN-LAST:event_btnDeletePLAllocationActionPerformed

    private void cbWorkerDeletePLAllocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbWorkerDeletePLAllocationActionPerformed
        cbParkingLotDeletePLAllocation.removeAllItems();
        if(cbWorkerDeletePLAllocation.getSelectedItem()!= null) {
        String selectedWorker = cbWorkerDeletePLAllocation.getSelectedItem().toString();
            ArrayList<String> allottedParkingLots = allPLAllocation.get(selectedWorker);
            for (String parkingLot : allottedParkingLots) {
                cbParkingLotDeletePLAllocation.addItem(parkingLot);
            }
        }
    }//GEN-LAST:event_cbWorkerDeletePLAllocationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ParkingLotForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ParkingLotForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ParkingLotForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ParkingLotForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ParkingLotForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeletePLAllocation;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveAllocation;
    private javax.swing.JComboBox<String> cbParkingLotAllot;
    private javax.swing.JComboBox<String> cbParkingLotDeletePLAllocation;
    private javax.swing.JComboBox<String> cbParkingLotNamesDelete;
    private javax.swing.JComboBox<String> cbParkingLotNamesUpdate;
    private javax.swing.JComboBox<String> cbWorkerDeletePLAllocation;
    private javax.swing.JComboBox<String> cbWorkers;
    private javax.swing.JFormattedTextField ftfBikeCapacity;
    private javax.swing.JFormattedTextField ftfBikeFee;
    private javax.swing.JFormattedTextField ftfCarCapacity;
    private javax.swing.JFormattedTextField ftfCarFee;
    private javax.swing.JFormattedTextField ftfHeavyVehicleCapacity;
    private javax.swing.JFormattedTextField ftfHeavyVehicleFee;
    private javax.swing.JFormattedTextField ftfRickshawCapacity;
    private javax.swing.JFormattedTextField ftfRickshawFee;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pnAddPLAllocation;
    private javax.swing.JPanel pnAddParkingLot;
    private javax.swing.JPanel pnDeletePLAllocation;
    private javax.swing.JPanel pnDeleteParkingLot;
    private javax.swing.JPanel pnDisplayPLAllocation;
    private javax.swing.JTable tbPLAllocation;
    private javax.swing.JTable tbParkingLot;
    private javax.swing.JTextField tfLocation;
    private javax.swing.JTextField tfName;
    // End of variables declaration//GEN-END:variables

    private void updateFrame(){
        parkingLotUtil = new ParkingLotUtil();
        PLAllocationUtil plAllocationUtil = new PLAllocationUtil();

        Worker worker = new Worker();
        ArrayList<ParkingLot> parkingLots1 = new ParkingLot().getAllParkingLot();
        int totalParkingLots = parkingLots1.size();
        Object[][] data = new Object[totalParkingLots][];
        Object[] columns = {"Sr.No", "Name", "Location", "Bike Capacity", "Rickshaw Capacity", "Car Capacity", "Heavy Vehicle Capacity",
                "Bike Fee", "Rickshaw Fee", "Car Fee", "Heavy Vehicle Fee"};

        // Remove all items before adding new to avoid duplicates
        cbParkingLotNamesDelete.removeAllItems();
        cbParkingLotNamesUpdate.removeAllItems();
        cbParkingLotAllot.removeAllItems();
        cbWorkers.removeAllItems();
        cbWorkerDeletePLAllocation.removeAllItems();

        cbParkingLotNamesUpdate.addItem("...Select Item...");
        cbParkingLotNamesUpdate.setSelectedIndex(0);

        // Adding ParkingLot names in combo boxes
        ArrayList<String> allPLNames = parkingLotUtil.getAllPLNames();
        for(String plName:allPLNames){
            cbParkingLotNamesDelete.addItem(plName);
            cbParkingLotNamesUpdate.addItem(plName);
            cbParkingLotAllot.addItem(plName);
        }

        // Add all workers' names in combo box of workers
        allWorkersUsername = worker.getAllWorkerUsernames();
        for(String username:allWorkersUsername.keySet()){
            cbWorkers.addItem(username);
        }

        // Load details of all Parking Lots in the table
        int count = 0;
        for(ParkingLot parkingLot: parkingLots1){
            int id = parkingLot.getId();
            String name = parkingLot.getName();
            String location = parkingLot.getLocation();


            int bikeCapacity = parkingLot.getSingleVehicleCapacity(VehicleTypes.BIKE.getValue());
            int rickshawCapacity = parkingLot.getSingleVehicleCapacity(VehicleTypes.RICKSHAW.getValue());
            int carCapacity = parkingLot.getSingleVehicleCapacity(VehicleTypes.CAR.getValue());
            int heavyVehicleCapacity = parkingLot.getSingleVehicleCapacity(VehicleTypes.HEAVY_VEHICLE.getValue());

            float bikeFee = parkingLot.getSingleParkingFee(VehicleTypes.BIKE.getValue());
            float rickshawFee = parkingLot.getSingleParkingFee(VehicleTypes.RICKSHAW.getValue());
            float carFee = parkingLot.getSingleParkingFee(VehicleTypes.CAR.getValue());
            float heavyVehicleFee = parkingLot.getSingleParkingFee(VehicleTypes.HEAVY_VEHICLE.getValue());

            Object[] row = {count+1, name, location, bikeCapacity, rickshawCapacity, carCapacity, heavyVehicleCapacity,
                            bikeFee, rickshawFee, carFee, heavyVehicleFee};
            data[count] = row;
            count++;
        }
        tbParkingLot.setModel(new javax.swing.table.DefaultTableModel(
                data, columns
        ));

        // Display table of Parking Lot Allocation
        allPLAllocation= plAllocationUtil.getAllPLAllocationWithUsername();
        int rowCount = 0;
        for(String key:allPLAllocation.keySet()){
            rowCount += allPLAllocation.get(key).size();
        }

        Object[][] allRows = new Object[rowCount][];
        Object[] allColumns = {"Sr No.", "Worker", "Parking Lot"};
        int workerCounter = 0;                  // Used to Display serial numbers. Only change when new worker is added
        int rowCounter = 0;
        for(String key: allPLAllocation.keySet()){
            cbWorkerDeletePLAllocation.addItem(key);

            boolean isWorkerAdded = false;      // Used to add the name of worker only one time
            ArrayList<String> parkingLots = allPLAllocation.get(key);

            for(String parkingLot: parkingLots){
                Object[] row = new Object[allColumns.length];
                if(!isWorkerAdded){
                    row[0] = ++workerCounter;
                    row[1] = key;               // Key is username of worker
                    isWorkerAdded = true;
                }else{
                    row[0] = "";
                    row[1] = "";
                }
                row[2] = parkingLot;

                allRows[rowCounter] = row;
                rowCounter++;
            }
        }
        tbPLAllocation.setModel(new javax.swing.table.DefaultTableModel(
                allRows, allColumns
        ));


    }
}
